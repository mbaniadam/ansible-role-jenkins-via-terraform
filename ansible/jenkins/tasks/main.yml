---
# tasks file for jenkins
- name: "install gpg required by apt_key"
  apt:
    name: gnupg
    state: present

- name: "add jenkins key"
  apt_key:
    state: present
    url: "{{ jenkins_key_url }}"

- name: "add repository"
  apt_repository: 
    filename: "{{ jenkins_repo.name }}"
    repo: "{{ jenkins_repo.url }}"
    state: present
    update_cache: yes

- name: Remove old and conflict
  apt:
    name:
      - docker
      - docker.io 
      - containerd.io 
      - containerd
      - runc
    state: absent

- name: "Install Jenkins, Java and other prerequisite apps"
  apt:
    name: "{{ item.value.name }}"
    state: present
  loop:
    "{{lookup('dict', packages) }}"

- name: "daemon-reload"
  systemd:
    daemon_reload: true
    
- name: Update JENKINS_JAVA_OPTIONS
  become: yes
  lineinfile:
    path: "{{ jenkins_config_file }}"
    regexp: ".*-Djava.awt.headless=true.*"
    line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Djenkins.install.runSetupWizard=false -Dcasc.jenkins.config=jenkins/casc_configs"'
    state: present

- name: update JENKINS_HOME ownership
  become: yes
  file:
    path: /var/lib/jenkins
    owner: jenkins
    group: jenkins
    state: directory
    recurse: yes

- name: "ensure {{ groovy_init_dir }} exists"
  file:
    path: "{{ groovy_init_dir }}"
    state: directory

- name: "Copy default user creation script"
  copy:
    src: "{{ groovy_script_file }}"
    dest: "{{ groovy_init_dir }}/basic-security.groovy"
    mode: "0777"

- name: "Starting jenkins" 
  service:
    name: "jenkins"
    state: started
    enabled: yes

- name: "Get Service Status"
  systemd:
    name: jenkins
  register: jenkins_state

- name: Debug
  debug:
    var: jenkins_state.status.ActiveState

- name: "add user to jenkins group"
  user:
    name: "admin"
    group: "jenkins"
    shell: /bin/bash
    # append: true
  
- name: "Get Home directory of user"
  debug: 
    var: ansible_env.HOME

- name: "Download Jenkins Cli"
  get_url:
    url: "{{ jenkins_cli_url }}"
    dest: "{{ ansible_env.HOME }}"
    mode: "0777"
  retries: 5
  delay: 5
  register: result

- name: Disable Plugin installation wizard
  shell:
    cmd: "jenkins --version > /var/lib/jenkins/jenkins.install.UpgradeWizard.state /var/lib/jenkins/jenkins.install.InstallUtil.lastExecVersion"

- name: "Add jenkins to sudoers"
  shell:
    cmd: "echo \"jenkins  ALL=(ALL) NOPASSWD: /bin/docker /bin/docker-compose >> /etc/sudoers\""


- name: download jenkins-plugin-manager
  get_url:
    url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.12.13/jenkins-plugin-manager-2.12.13.jar
    dest: $HOME/jenkins-plugin-manager.jar

- name: download jenkins WAR file
  get_url:
    url: https://get.jenkins.io/war-stable/2.414.1/jenkins.war
    dest: /usr/share/jenkins/jenkins.war

- name: Copy the plugins.yaml file
  copy:
    dest: $HOME/plugins.yaml
    src: "jenkins/files/plugins.yaml"


- name: run the jenkins-plugin-manager
  become: yes
  command: java -jar jenkins-plugin-manager.jar --plugin-file plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins

- name: update JENKINS_HOME ownership
  become: yes
  file:
    path: /var/lib/jenkins
    owner: jenkins
    group: jenkins
    state: directory
    recurse: yes

- name: "Restarting jenkins to apply configuration" 
  service:
    name: "jenkins"
    state: restarted
    enabled: yes

- name: "remove user creation script"
  file: 
    path: "{{ groovy_init_dir }}/basic-security.groovy"
    state: absent